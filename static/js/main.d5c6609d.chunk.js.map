{"version":3,"sources":["../../contracts/src/abis.js","../../contracts/src/addresses.js","hooks/useWeb3Modal.js","graphql/subgraph.js","components/Colordict.js","components/Artworksketch.js","components/Artwork.js","components/UsersArtworks.js","components/GenerateNewArtwork.js","components/Home.js","components/AllArtworks.js","components/WrongNetworkDialog.js","components/WalletButton.js","components/FundLinkButton.js","components/Navbar.js","App.js","styles/theme.js","index.js"],"names":["abis","rganft","abi","erc667","erc667Abi","addresses","KOVAN_LINKTOKEN","INFURA_ID","useWeb3Modal","config","useState","provider","setProvider","autoLoaded","setAutoLoaded","autoLoad","infuraId","NETWORK","web3Modal","Web3Modal","network","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","loadWeb3Modal","useCallback","a","connect","newProvider","Web3Provider","logoutOfWeb3Modal","clearCachedProvider","window","location","reload","useEffect","cachedProvider","GET_TRANSFERS","gql","colordict","Artworksketch","artwork","rv1","random_value","mod","rv2","div","colorCounter","colorPalette","toNumber","length","colorPaletteLimit","rStep","setup","p5","canvasParentRef","createCanvas","parent","noStroke","frameRate","draw","background","translate","width","height","r","c","PI","cSegment","map","aSegment","floor","ellipseSize","fill","push","rotate","radians","ellipse","pop","useStyles","makeStyles","theme","inputTextField","color","roundedPaper","marginBottom","spacing","borderRadius","textAlign","palette","itemgradient","textShadow","transferButton","Artwork","contract","userAddress","id","showOwner","toAddress","setToAddress","ownerOf","setOwnerOf","classes","alert","transferFrom","_id","ownerOfId","console","log","undefined","getOwnerOfId","Paper","className","elevation","Grid","container","direction","item","artworkName","TextField","label","variant","value","onChange","event","target","Button","onClick","transferOwnership","UsersArtworks","artworkCount","setArtworkCount","allArtworkCount","setAllArtworkCount","artworkIds","setArtworkIds","artworks","setArtworks","loading","setLoading","getUsersArtworkBalance","balanceOf","number_of_users_artworks","getArtworkCount","number_of_all_artworks","artwork_ids","i","getUsersArtworksIds","_artworks","_artwork","getUsersArtworks","LinearProgress","index","key","root","margin","shape","GenerateButton","padding","requestNewRandomArtwork","Math","random","GenerateNewArtwork","textInput","setTextInput","justify","alignItems","generateNewArtwork","Home","Typography","href","AllArtworks","allArtworks","setAllArtworks","getAllArtworkCount","getAllArtworks","WrongNetworkDialog","wrongNetwork","setWrongNetwork","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","navbarButton","marginRight","backgroundColor","WalletButton","FundLinkButton","signer","LinkContract","Contract","linkbalance","funding_amount","BigNumber","from","gte","transfer","sendLinkToContract","navbarItem","menu","menuItem","toolbar","flexGrow","navbar","Navbar","useTheme","isMobile","useMediaQuery","breakpoints","down","anchorEl","setAnchorEl","Boolean","handleClose","AppBar","position","Toolbar","IconButton","aria-controls","aria-haspopup","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","to","content","flex","overflow","App","useQuery","error","data","setUserAddress","setSigner","setContract","connected","setConnected","transfers","fillStates","getNetwork","_network","name","getSigner","_signer","getAddress","_useraddress","_rganft_contract","path","exact","createMuiTheme","type","primary","main","secondary","gradient","client","ApolloClient","uri","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d5c6609d.chunk.js","sourcesContent":["\n\nimport erc667Abi from \".\\\\abis\\\\contracts\\\\ERC667.sol\\\\ERC677.json\";\nimport rganftAbi from \"./abis/contracts/RGANFT.sol/RGANFT.json\";\n\n\nconst abis = {\n  rganft: rganftAbi.abi,\n  erc667: erc667Abi.abi,\n};\n\nexport default abis;\n","\nconst addresses = {\n  rganft: \"0x85cad4Cf034De01fC37d560e0A3279D56221bF1B\",\n  KOVAN_LINKTOKEN:\t\"0xa36085f69e2889c224210f603d836748e7dc0088\",\n    \n};\n\nexport default addresses;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nconst INFURA_ID = \"06724683d7f049dbabf8421830ebfef0\";\n\nconst NETWORK_NAME = \"kovan\";\n\nfunction useWeb3Modal(config = {}) {\n  const [provider, setProvider] = useState();\n  const [autoLoaded, setAutoLoaded] = useState(false);\n  const { autoLoad = true, infuraId = INFURA_ID, NETWORK = NETWORK_NAME } = config;\n\n  // Web3Modal also supports many other wallets.\n  // You can see other options at https://github.com/Web3Modal/web3modal\n  const web3Modal = new Web3Modal({\n    network: NETWORK,\n    cacheProvider: true,\n    providerOptions: {\n      walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n          infuraId,\n        },\n      },\n    },\n  });\n\n  // Open wallet selection modal.\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, [web3Modal]);\n\n  const logoutOfWeb3Modal = useCallback(\n    async function () {\n      await web3Modal.clearCachedProvider();\n      window.location.reload();\n    },\n    [web3Modal],\n  );\n\n  // If autoLoad is enabled and the the wallet had been loaded before, load it automatically now.\n  useEffect(() => {\n    if (autoLoad && !autoLoaded && web3Modal.cachedProvider) {\n      loadWeb3Modal();\n      setAutoLoaded(true);\n    }\n  }, [autoLoad, autoLoaded, loadWeb3Modal, setAutoLoaded, web3Modal.cachedProvider]);\n\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;\n","import { gql } from \"apollo-boost\";\n\n// See more example queries on https://thegraph.com/explorer/subgraph/paulrberg/create-eth-app\nconst GET_TRANSFERS = gql`\n  {\n    transfers(first: 10) {\n      id\n      from\n      to\n      value\n    }\n  }\n`;\n\nexport default GET_TRANSFERS;\n","const colordict = [\r\n  [\"#e63946\",\r\n    \"#f1faee\",\r\n    \"#a8dadc\",\r\n    \"#457b9d\",\r\n    \"#1d3557\"],\r\n  [\"#000000\",\r\n    \"#14213D\",\r\n    \"#FCA311\",\r\n    \"#E5E5E5\",\r\n    \"#FFFFFF\"],\r\n  [\"#03045e\",\r\n    \"#023E8A\",\r\n    \"#0077B6\",\r\n    \"#0096C7\",\r\n    \"#00B4D8\",\r\n    \"#48CAE4\",\r\n    \"#90e0ef\",\r\n    \"#ADE8F4\",\r\n    \"#CAF0F8\"],\r\n  [\"#FFCBF2\",\r\n    \"#F3C4FB\",\r\n    \"#ECBCFD\",\r\n    \"#E5B3FE\",\r\n    \"#E2AFFF\",\r\n    \"#DEAAFF\",\r\n    \"#D8BBFF\",\r\n    \"#D0D1FF\",\r\n    \"#C8E7FF\",\r\n    \"#c0fdff\"],\r\n  [\"#264653\",\r\n    \"#2A9D8F\",\r\n    \"#E9C46A\",\r\n    \"#F4A261\",\r\n    \"#E76F51\"],\r\n  [\"#003049\", \"#d62828\", \"#f77f00\", \"#fcbf49\", \"#eae2b7\"],\r\n  [\"#f72585\", \"#b5179e\", \"#7209b7\", \"#560bad\", \"#480ca8\", \"#3a0ca3\", \"#3f37c9\", \"#4361ee\", \"#4895ef\", \"#4cc9f0\"],\r\n  [\"#03071e\", \"#370617\", \"#6a040f\", \"#9d0208\", \"#d00000\", \"#dc2f02\", \"#e85d04\", \"#f48c06\", \"#faa307\", \"#ffba08\"],\r\n  [\"#0b090a\", \"#161a1d\", \"#660708\", \"#a4161a\", \"#ba181b\", \"#e5383b\", \"#b1a7a6\", \"#d3d3d3\", \"#f5f3f4\", \"#ffffff\"],\r\n  [\"#0d1b2a\", \"#1b263b\", \"#415a77\", \"#778da9\", \"#e0e1dd\"],\r\n  [\"#00296b\", \"#003f88\", \"#00509d\", \"#fdc500\", \"#ffd500\"],\r\n  [\"#fadde1\", \"#ffc4d6\", \"#ffa6c1\", \"#ff87ab\", \"#ff5d8f\", \"#ff97b7\", \"#ffacc5\", \"#ffcad4\", \"#f4acb7\"]\r\n]\r\nexport default colordict;","import React from \"react\";\r\nimport colordict from \"./Colordict\";\r\nimport Sketch from \"react-p5\";\r\n\r\nfunction Artworksketch({ artwork }) {\r\n  // const random_value = artwork.random_value.toString();\r\n  const rv1 = artwork.random_value.mod(100);\r\n  const rv2 = artwork.random_value.div(100).mod(100);\r\n  const rv3 = artwork.random_value.div(10000).mod(100);\r\n  let colorCounter = 0;\r\n  let colorPalette = rv2.toNumber() % colordict.length;\r\n  let colorPaletteLimit = colordict[colorPalette].length;\r\n\r\n  let framerate = 25;\r\n  let rStep = rv1.toNumber();\r\n  let rMax = 250;\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    // use parent to render the canvas in this ref\r\n    // (without that p5 will render the canvas outside of your component)\r\n    p5.createCanvas(500, 500).parent(canvasParentRef);\r\n    p5.noStroke();\r\n    p5.frameRate(framerate);\r\n  }\r\n\r\n  const draw = (p5) => {\r\n    p5.background(0);\r\n    p5.translate(p5.width / 2, p5.height / 2);\r\n\r\n    for (let r = 0; r < rMax; r += rStep) {\r\n      let c = 2 * p5.PI * r;\r\n      let cSegment = p5.map(r, 0, rMax, rStep * 3 / 4, rStep / 2);\r\n      let aSegment = p5.floor(c / cSegment);\r\n      let ellipseSize = p5.map(r, 0, rMax, rStep * 3 / 4 - 1, rStep / 4);\r\n\r\n      for (let a = 0; a < 360; a += 360 / aSegment) {\r\n        colorCounter = colorCounter % colorPaletteLimit;\r\n        p5.fill(colordict[colorPalette][colorCounter]);\r\n        p5.push();\r\n        p5.rotate(p5.radians(a));\r\n        p5.ellipse(r, 0, ellipseSize, ellipseSize);\r\n        p5.pop();\r\n        colorCounter++;\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <Sketch setup={setup} draw={draw} />\r\n  );\r\n}\r\n\r\nexport default Artworksketch;\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Artworksketch from \"./Artworksketch\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  inputTextField: {\r\n    color: \"#fff\"\r\n  },\r\n  roundedPaper: {\r\n    marginBottom: theme.spacing(2),\r\n    borderRadius: 45,\r\n    textAlign: \"center\",\r\n    background: theme.palette.itemgradient.background,\r\n    color: \"#fff\",\r\n    textShadow: \" 1px 1px 1px #000\"\r\n  },\r\n  transferButton: {\r\n    background: theme.palette.itemgradient.background,\r\n    color: \"#fff\",\r\n    textShadow: \" 1px 1px 1px #000\"\r\n  }\r\n}));\r\n\r\nfunction Artwork({ artwork, contract, userAddress, id, showOwner }) {\r\n  const [toAddress, setToAddress] = useState();\r\n  const [ownerOf, setOwnerOf] = useState();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    console.log(\" artwork useeffect\");\r\n    if (!showOwner || !contract || id === undefined) return;\r\n    console.log(\"all artwork use effect\");\r\n    async function getOwnerOfId(_id) {\r\n      let ownerOfId = await contract.ownerOf(_id);\r\n      setOwnerOf(ownerOfId);\r\n    }\r\n    getOwnerOfId(id);\r\n\r\n  }, [showOwner, contract, id]);\r\n\r\n  function handleAddressInputChange(event) {\r\n    //event.preventDefault();\r\n    setToAddress(event.target.value);\r\n  }\r\n\r\n  async function transferOwnership() {\r\n    if (!contract || !userAddress) { return; };\r\n    if (!toAddress) {\r\n      alert(\"no receiving address set\");\r\n      return;\r\n    }\r\n    // TODO implement input validation to allow only valid addresses as input\r\n    await contract.transferFrom(userAddress, toAddress, id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        className={classes.roundedPaper}\r\n        elevation={4}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          spacing={2}>\r\n          <Grid item>\r\n            <p>{`Name : ${artwork.artworkName}`}</p>\r\n            <p>{`ID: ${id}`}</p>\r\n            <p>{showOwner ? `Owner: ${ownerOf}` : \"\"}</p>\r\n          </Grid>\r\n          <Grid item>\r\n            {artwork ?\r\n              <Artworksketch artwork={artwork} />\r\n              : \"\"}\r\n\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              label=\"Transfer To Address\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              className={classes.inputTextField}\r\n              value={toAddress}\r\n              onChange={handleAddressInputChange} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.transferButton}\r\n              color=\"primary\"\r\n              onClick={() => transferOwnership()}>\r\n              Transfer Ownership\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Artwork;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Artwork from \"./Artwork.js\";\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  roundedPaper: {\r\n    borderRadius: 35,\r\n    textAlign: \"center\",\r\n    background: theme.palette.itemgradient.background,\r\n    color: \"#fff\",\r\n    textShadow: \" 1px 1px 1px #000\"\r\n  },\r\n}));\r\n\r\nfunction UsersArtworks({ contract, userAddress }) {\r\n  const [artworkCount, setArtworkCount] = useState();\r\n  const [allArtworkCount, setAllArtworkCount] = useState();\r\n  const [artworkIds, setArtworkIds] = useState();\r\n  const [artworks, setArtworks] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    if (!contract || !userAddress) { return; }\r\n    let isMounted = true;\r\n    async function getUsersArtworkBalance() {\r\n      console.log(\"getUsersArtworkBalance\");\r\n      let number_of_users_artworks;\r\n      let number_of_all_artworks;\r\n      number_of_users_artworks = await contract.balanceOf(userAddress);\r\n      number_of_all_artworks = await contract.getArtworkCount();\r\n      setAllArtworkCount(number_of_all_artworks);\r\n      setArtworkCount(number_of_users_artworks);\r\n    }\r\n    getUsersArtworkBalance();\r\n    return () => { isMounted = false; }\r\n  }, [contract, userAddress]);\r\n\r\n  useEffect(() => {\r\n    if (!allArtworkCount) { return; }\r\n    async function getUsersArtworksIds() {\r\n      console.log(\"getUsersArtworksIds\");\r\n      let artwork_ids = [];\r\n      for (let i = 0; i < allArtworkCount; i++) {\r\n        let _artwork_owner = await contract.ownerOf(i);\r\n        if (_artwork_owner === userAddress) {\r\n          artwork_ids.push(i);\r\n        }\r\n      }\r\n      setArtworkIds(artwork_ids);\r\n    }\r\n    getUsersArtworksIds();\r\n  }, [allArtworkCount, contract, userAddress]);\r\n\r\n  useEffect(() => {\r\n    if (!artworkIds) return;\r\n    async function getUsersArtworks() {\r\n      console.log(\"getusersartworks\");\r\n      let _artworks = [];\r\n      for (let i = 0; i < artworkIds.length; i++) {\r\n        let _artwork = await contract.artworks(artworkIds[i]);\r\n        _artworks.push(_artwork);\r\n      }\r\n      setArtworks(_artworks);\r\n      setLoading(false);\r\n\r\n    }\r\n    getUsersArtworks();\r\n  }, [artworkIds, contract]);\r\n\r\n  return (\r\n    <Grid item>\r\n      <Paper\r\n        className={classes.roundedPaper}\r\n        elevation={4}>\r\n        <p>Your Address:</p>\r\n        <p>{userAddress}</p>\r\n        {loading ? <LinearProgress color=\"secondary\" /> : \"\"}\r\n        <p>{artworkCount ? `You own ${artworkCount} RGA-NFTs` : \"\"}</p>\r\n      </Paper>\r\n\r\n      {!loading ? artworks.map((_artwork, index) => {\r\n        return (\r\n          <Artwork\r\n            artwork={_artwork}\r\n            contract={contract}\r\n            userAddress={userAddress}\r\n            id={artworkIds[index]}\r\n            key={index}\r\n            showOwner={false} />\r\n        );\r\n      })\r\n        : \"\"\r\n      }\r\n    </Grid>\r\n  );\r\n\r\n}\r\n\r\nexport default UsersArtworks;","import React, { useState } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n  inputTextField: {\r\n    margin: theme.spacing(2),\r\n    borderRadius: 25,\r\n  },\r\n  roundedPaper: {\r\n    borderRadius: theme.shape.borderRadius,\r\n  },\r\n  GenerateButton: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.shape.borderRadius,\r\n    background: theme.palette.itemgradient.background,\r\n    color: \"#fff\",\r\n    textShadow: \" 1px 1px 1px #000\"\r\n  },\r\n}));\r\n\r\nasync function generateNewArtwork(provider, contract, artworkName) {\r\n  if (!provider || !contract) { return; };\r\n  if (!artworkName) {\r\n    alert(\"no name set\");\r\n    return;\r\n  }\r\n  await contract.requestNewRandomArtwork(Math.floor(Math.random() * 1000), artworkName);\r\n}\r\n\r\nfunction GenerateNewArtwork({ provider, contract }) {\r\n  const [textInput, setTextInput] = useState(\"\");\r\n  const classes = useStyles();\r\n  if (!provider || !contract) { return <p>loading</p>; }\r\n\r\n  function handleInputchange(event) {\r\n    setTextInput(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <Paper\r\n      className={classes.roundedPaper}\r\n      elevation={4}\r\n      variant=\"outlined\"\r\n      color=\"secondary\">\r\n      <Grid container\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"column\">\r\n        <Grid item >\r\n          <TextField\r\n            label=\"Artwork Name\"\r\n            variant=\"outlined\"\r\n            className={classes.inputTextField}\r\n            value={textInput}\r\n            color=\"primary\"\r\n            onChange={handleInputchange} />\r\n        </Grid>\r\n        <Grid item >\r\n          <Button\r\n            className={classes.GenerateButton}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={() => generateNewArtwork(provider, contract, textInput)}>\r\n            Generate a new Random Artwork\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default GenerateNewArtwork;","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  roundedPaper: {\r\n    borderRadius: theme.shape.borderRadius,\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n    background: theme.palette.itemgradient.background,\r\n    color: \"#fff\",\r\n    textShadow: \" 1px 1px 1px #000\"\r\n  },\r\n}));\r\n\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      className={classes.roundedPaper}\r\n      elevation={4}\r\n      variant=\"outlined\"\r\n      color=\"primary\">\r\n      <Grid container\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"column\">\r\n        <Grid item >\r\n          <Typography\r\n            variant=\"h4\">\r\n            Welcome to the RGA-NFT Dapp\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item >\r\n          <Typography\r\n            variant=\"h5\">\r\n            Before you can create new Randomly Generated Artworks first: \r\n          </Typography>\r\n          <Typography\r\n            variant=\"h6\">\r\n            1: Install <a target=\"_blank\" href=\"https://metamask.io/\">Metamask Browser Extension</a> and create your wallet.\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h6\">\r\n            2: Connect to Kovan Testnet \r\n          </Typography>\r\n          <Typography\r\n            variant=\"h6\">\r\n            3: Get yourself <a target=\"_blank\" href=\"https://faucet.kovan.network/\">Kovan Test Ether</a>\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h6\">\r\n            4: Connect your wallet to this Dapp\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from \"react\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Artwork from \"./Artwork.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  roundedPaper: {\r\n    borderRadius: 35,\r\n    textAlign: \"center\",\r\n    background: theme.palette.itemgradient.background,\r\n    color: \"#fff\",\r\n    textShadow: \" 1px 1px 1px #000\"\r\n  },\r\n}));\r\n\r\nfunction AllArtworks({ contract }) {\r\n  const [allArtworkCount, setAllArtworkCount] = useState();\r\n  const [allArtworks, setAllArtworks] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (!contract) { return; }\r\n    let isMounted = true;\r\n    async function getAllArtworkCount() {\r\n      console.log(\"getAllArtworkCount\");\r\n      let number_of_all_artworks;\r\n      number_of_all_artworks = await contract.getArtworkCount();\r\n      setAllArtworkCount(number_of_all_artworks);\r\n    }\r\n    getAllArtworkCount();\r\n    return () => { isMounted = false; }\r\n  }, [contract]);\r\n\r\n  useEffect(() => {\r\n    if (!allArtworkCount) return;\r\n    let isMounted = true;\r\n    async function getAllArtworks() {\r\n      console.log(\"getusersartworks\");\r\n      let _artworks = [];\r\n      for (let i = 0; i < allArtworkCount; i++) {\r\n        let _artwork = await contract.artworks(i);\r\n        _artworks.push(_artwork);\r\n      }\r\n      setAllArtworks(_artworks);\r\n      setLoading(false);\r\n    }\r\n    getAllArtworks();\r\n    return () => { isMounted = false; }\r\n  }, [allArtworkCount, contract]);\r\n\r\n  return (\r\n    <Grid item>\r\n      <Paper\r\n        className={classes.roundedPaper}\r\n        elevation={4}>\r\n        <p>{allArtworkCount ? `Showing all ${allArtworkCount} RGA-NFTs` : \"\"}</p>\r\n        {loading ? <LinearProgress color=\"secondary\" /> : \"\"}\r\n      </Paper>\r\n\r\n      {!loading ? allArtworks.map((_artwork, index) => {\r\n        return (\r\n          <Artwork\r\n            artwork={_artwork}\r\n            id={index}\r\n            contract={contract}\r\n            key={index}\r\n            showOwner={true} />\r\n        );\r\n      })\r\n        : \"\"}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default AllArtworks;","import React from \"react\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction WrongNetworkDialog({ wrongNetwork, setWrongNetwork }) {\r\n\r\n  return (\r\n    <Dialog\r\n      open={wrongNetwork}\r\n      onClose={() => { setWrongNetwork(false); }}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\">\r\n      <DialogTitle id=\"alert-dialog-title\">{\"Connected to wrong Network\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\" >\r\n          Please connect to <b>Kovan</b> Testnet in your Metamask.\r\n          And refresh the page.\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => { setWrongNetwork(false); }} color=\"primary\">\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default WrongNetworkDialog;","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbarButton: {\r\n    marginRight: theme.spacing(4),\r\n    background: \"#0096c7\",\r\n    '&:hover': {\r\n      backgroundColor: \"#00b4d8\",\r\n    },\r\n    color: \"#fff\"\r\n  },\r\n}));\r\n\r\nfunction WalletButton({ provider, loadWeb3Modal, logoutOfWeb3Modal }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      className={classes.navbarButton}\r\n      onClick={() => {\r\n        if (!provider) {\r\n          loadWeb3Modal();\r\n        } else {\r\n          logoutOfWeb3Modal();\r\n        }\r\n      }}\r\n    >\r\n      {!provider ? \"Connect Wallet\" : \"Disconnect Wallet\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default WalletButton;","import React from \"react\";\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport { Contract } from \"@ethersproject/contracts\";\r\nimport {BigNumber} from \"ethers\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbarButton: {\r\n    marginRight: theme.spacing(4),\r\n    backgroundColor: \"#0096c7\",\r\n    '&:hover': {\r\n      backgroundColor: \"#00b4d8\",\r\n    },\r\n    color: \"#fff\"\r\n  },\r\n}));\r\n\r\nfunction FundLinkButton({ provider, signer, userAddress }) {\r\n  const classes = useStyles();\r\n\r\n  async function sendLinkToContract(){\r\n    let LinkContract = new Contract(addresses.KOVAN_LINKTOKEN, abis.erc667, signer);\r\n    let linkbalance = await LinkContract.balanceOf(userAddress);\r\n    \r\n    // 2000000000000000000 = 2 LINK \r\n    const funding_amount = BigNumber.from(\"2000000000000000000\");\r\n    \r\n    // BigNumber comparison >= gte\r\n    if (linkbalance.gte(funding_amount)){\r\n      await LinkContract.transfer(\r\n        addresses.rganft,\r\n        funding_amount); \r\n    }\r\n    else{\r\n      console.log(\"not enough LINK in your wallet\");\r\n      return;\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <Button\r\n      variant=\"contained\" \r\n      className={classes.navbarButton}\r\n      onClick={() => {\r\n        if (!provider || !signer) {\r\n          console.log(\"not connected\");\r\n        } else {\r\n          sendLinkToContract();\r\n        }\r\n      }}\r\n    >\r\n      Send Link To Contract\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default FundLinkButton;","import React, { useState } from \"react\";\r\n\r\nimport WalletButton from \"./WalletButton\";\r\nimport FundLinkButton from \"./FundLinkButton\";\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbarItem: {\r\n    marginRight: theme.spacing(4),\r\n    color: \"#fff\",\r\n  },\r\n  menu: {\r\n    alignItems: \"center\",\r\n    justify: \"center\",\r\n  },\r\n  menuItem: {\r\n  },\r\n\r\n  toolbar: {\r\n    flexGrow: 1,\r\n  },\r\n  navbar: {\r\n    background: theme.palette.itemgradient.background\r\n  }\r\n}));\r\n\r\nfunction Navbar({ provider,\r\n  loadWeb3Modal,\r\n  logoutOfWeb3Modal,\r\n  signer,\r\n  userAddress }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={classes.navbar}>\r\n        <Toolbar>\r\n          {isMobile ?\r\n            <>\r\n              <IconButton\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n                className={classes.menu}\r\n              >\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link to=\"/rga-NFT\" className={classes.menuItem} >Home</Link>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link to=\"/generateRGANFT\" className={classes.menuItem} >Generate New Artwork</Link>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link to=\"/yourArtworks\" className={classes.menuItem} >Your Artworks</Link>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link to=\"/allArtworks\" className={classes.menuItem} >All Artworks</Link>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <WalletButton\r\n                    provider={provider}\r\n                    loadWeb3Modal={loadWeb3Modal}\r\n                    logoutOfWeb3Modal={logoutOfWeb3Modal} />\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <FundLinkButton\r\n                    provider={provider}\r\n                    signer={signer}\r\n                    userAddress={userAddress} />\r\n                </MenuItem>\r\n              </Menu>\r\n\r\n            </>\r\n            :\r\n            <>\r\n              <Typography variant=\"h6\"\r\n                className={classes.toolbar}>\r\n                <Link to=\"/rga-NFT\" className={classes.navbarItem} >Home</Link>\r\n\r\n                <Link to=\"/generateRGANFT\" className={classes.navbarItem} >Generate New Artwork</Link>\r\n\r\n                <Link to=\"/yourArtworks\" className={classes.navbarItem} >Your Artworks</Link>\r\n\r\n                <Link to=\"/allArtworks\" className={classes.navbarItem} >All Artworks</Link>\r\n              </Typography>\r\n\r\n              <WalletButton\r\n                provider={provider}\r\n                loadWeb3Modal={loadWeb3Modal}\r\n                logoutOfWeb3Modal={logoutOfWeb3Modal} />\r\n\r\n              <FundLinkButton\r\n                provider={provider}\r\n                signer={signer}\r\n                userAddress={userAddress} />\r\n            </>}\r\n\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { addresses, abis } from \"@project/contracts\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport GET_TRANSFERS from \"./graphql/subgraph\";\n\nimport UsersArtworks from \"./components/UsersArtworks\";\nimport GenerateNewArtwork from \"./components/GenerateNewArtwork\";\nimport Home from \"./components/Home\";\nimport AllArtworks from \"./components/AllArtworks\";\nimport WrongNetworkDialog from \"./components/WrongNetworkDialog\";\nimport Navbar from \"./components/Navbar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from \"@material-ui/core/Grid\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  content: {\n    flex: \"1\",\n    overflow: \"auto\",\n    background: theme.palette.itemgradient.background,\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const { loading, error, data } = useQuery(GET_TRANSFERS);\n  const [provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal();\n  const [userAddress, setUserAddress] = useState(\"\");\n  const [signer, setSigner] = useState(\"\");\n  const [contract, setContract] = useState(\"\");\n  const [connected, setConnected] = useState(false);\n  const [wrongNetwork, setWrongNetwork] = useState(false);\n\n  useEffect(() => {\n    if (!loading && !error && data && data.transfers) {\n      console.log({ transfers: data.transfers });\n    }\n  }, [loading, error, data]);\n\n  // connect to user wallet and initialize states\n  useEffect(() => {\n    if (!provider) return;\n    let isMounted = true;\n    setConnected(false);\n\n    async function fillStates() {\n      let _network = await provider.getNetwork();\n      if (_network.name === \"kovan\") {\n        console.log(\"ON NETWORK: \", _network.name);\n        setWrongNetwork(false);\n      }\n      else {\n        setWrongNetwork(true);\n        return;\n      }\n      let _signer = await provider.getSigner();\n      let _useraddress = await _signer.getAddress();\n      let _rganft_contract = new Contract(addresses.rganft, abis.rganft, _signer);\n      setSigner(_signer);\n      setUserAddress(_useraddress);\n      setContract(_rganft_contract);\n    }\n    fillStates();\n    setConnected(true);\n    return () => { isMounted = false; }\n  }, [provider]);\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      className={classes.root}>\n      <Router>\n        <Grid item >\n          <Navbar\n            provider={provider}\n            loadWeb3Modal={loadWeb3Modal}\n            logoutOfWeb3Modal={logoutOfWeb3Modal}\n            signer={signer}\n            userAddress={userAddress} />\n        </Grid>\n\n        <Grid item container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          className={classes.content} >\n\n          <Grid item >\n            <WrongNetworkDialog\n              wrongNetwork={wrongNetwork}\n              setWrongNetwork={setWrongNetwork} />\n          </Grid>\n\n          <Switch>\n            {!connected ?\n              <>\n                <Grid item>\n                  <Home />\n                </Grid>\n\n                <Grid item>\n                  <p>Connect to Kovan in Metamask</p>\n                  <LinearProgress\n                    color={\"secondary\"} />\n                </Grid>\n              </>\n              :\n              <>\n                <Route path=\"/generateRGANFT\">\n                  <Grid item >\n                    <GenerateNewArtwork\n                      provider={provider}\n                      contract={contract} />\n                  </Grid>\n                </Route>\n\n                <Route path=\"/yourArtworks\">\n                  <Grid item container\n                    direction=\"column\"\n                    spacing={10}\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                    className={classes.content} >\n\n                    <UsersArtworks\n                      contract={contract}\n                      userAddress={userAddress} />\n\n                  </Grid>\n                </Route>\n\n                <Route path=\"/allArtworks\">\n                  <Grid item container\n                    direction=\"column\"\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                    className={classes.content} >\n                    <AllArtworks\n                      contract={contract} />\n                  </Grid>\n                </Route>\n\n                <Route exact path=\"/rga-NFT\">\n                  <Grid item>\n                    <Home />\n                  </Grid>\n                </Route>\n              </>\n            }\n          </Switch>\n\n        </Grid>\n\n      </Router>\n    </Grid >\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"light\",\r\n    primary: {\r\n      main: \"#023e8a\",\r\n    },\r\n    secondary: {\r\n      main: \"#FF0055\",\r\n    },\r\n    gradient: {\r\n      background: \"radial-gradient(ellipse at 50% 50%, #FF0055 0%, #c7edeb 50.69%, #000066 90.91%)\",\r\n    },\r\n    itemgradient: {\r\n      background: \"radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(18,91,149,1) 54%, rgba(0,0,0,1) 100%)\",\r\n    }\r\n  },\r\n  shape: {\r\n    borderRadius: 10,\r\n  },\r\n});\r\n\r\nexport default theme;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport theme from \"./styles/theme\";\n\n// You should replace this url with your own and put it into a .env file\n// See all subgraphs: https://thegraph.com/explorer/\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/paulrberg/create-eth-app\",\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeProvider\n      theme={theme}>\n      <App />\n    </ThemeProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}